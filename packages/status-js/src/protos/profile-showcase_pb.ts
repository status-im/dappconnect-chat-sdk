// @generated by protoc-gen-es v1.4.2 with parameter "target=ts"
// @generated from file profile-showcase.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf'
import { Message, proto3, protoInt64 } from '@bufbuild/protobuf'

/**
 * @generated from enum ProfileShowcaseVisibility
 */
export enum ProfileShowcaseVisibility {
  /**
   * @generated from enum value: PROFILE_SHOWCASE_VISIBILITY_NO_ONE = 0;
   */
  NO_ONE = 0,

  /**
   * @generated from enum value: PROFILE_SHOWCASE_VISIBILITY_IDVERIFIED_CONTACTS = 1;
   */
  IDVERIFIED_CONTACTS = 1,

  /**
   * @generated from enum value: PROFILE_SHOWCASE_VISIBILITY_CONTACTS = 2;
   */
  CONTACTS = 2,

  /**
   * @generated from enum value: PROFILE_SHOWCASE_VISIBILITY_EVERYONE = 3;
   */
  EVERYONE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ProfileShowcaseVisibility)
proto3.util.setEnumType(
  ProfileShowcaseVisibility,
  'ProfileShowcaseVisibility',
  [
    { no: 0, name: 'PROFILE_SHOWCASE_VISIBILITY_NO_ONE' },
    { no: 1, name: 'PROFILE_SHOWCASE_VISIBILITY_IDVERIFIED_CONTACTS' },
    { no: 2, name: 'PROFILE_SHOWCASE_VISIBILITY_CONTACTS' },
    { no: 3, name: 'PROFILE_SHOWCASE_VISIBILITY_EVERYONE' },
  ]
)

/**
 * @generated from message ProfileShowcaseCommunity
 */
export class ProfileShowcaseCommunity extends Message<ProfileShowcaseCommunity> {
  /**
   * @generated from field: string community_id = 1;
   */
  communityId = ''

  /**
   * @generated from field: uint32 order = 2;
   */
  order = 0

  /**
   * @generated from field: bytes grant = 3;
   */
  grant = new Uint8Array(0)

  constructor(data?: PartialMessage<ProfileShowcaseCommunity>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'ProfileShowcaseCommunity'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: 'community_id',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    { no: 2, name: 'order', kind: 'scalar', T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: 'grant', kind: 'scalar', T: 12 /* ScalarType.BYTES */ },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ProfileShowcaseCommunity {
    return new ProfileShowcaseCommunity().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseCommunity {
    return new ProfileShowcaseCommunity().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseCommunity {
    return new ProfileShowcaseCommunity().fromJsonString(jsonString, options)
  }

  static equals(
    a:
      | ProfileShowcaseCommunity
      | PlainMessage<ProfileShowcaseCommunity>
      | undefined,
    b:
      | ProfileShowcaseCommunity
      | PlainMessage<ProfileShowcaseCommunity>
      | undefined
  ): boolean {
    return proto3.util.equals(ProfileShowcaseCommunity, a, b)
  }
}

/**
 * @generated from message ProfileShowcaseAccount
 */
export class ProfileShowcaseAccount extends Message<ProfileShowcaseAccount> {
  /**
   * @generated from field: string address = 1;
   */
  address = ''

  /**
   * @generated from field: string name = 2;
   */
  name = ''

  /**
   * @generated from field: string color_id = 3;
   */
  colorId = ''

  /**
   * @generated from field: string emoji = 4;
   */
  emoji = ''

  /**
   * @generated from field: uint32 order = 5;
   */
  order = 0

  constructor(data?: PartialMessage<ProfileShowcaseAccount>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'ProfileShowcaseAccount'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'address', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'name', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 3, name: 'color_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 4, name: 'emoji', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 5, name: 'order', kind: 'scalar', T: 13 /* ScalarType.UINT32 */ },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ProfileShowcaseAccount {
    return new ProfileShowcaseAccount().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseAccount {
    return new ProfileShowcaseAccount().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseAccount {
    return new ProfileShowcaseAccount().fromJsonString(jsonString, options)
  }

  static equals(
    a:
      | ProfileShowcaseAccount
      | PlainMessage<ProfileShowcaseAccount>
      | undefined,
    b: ProfileShowcaseAccount | PlainMessage<ProfileShowcaseAccount> | undefined
  ): boolean {
    return proto3.util.equals(ProfileShowcaseAccount, a, b)
  }
}

/**
 * @generated from message ProfileShowcaseCollectible
 */
export class ProfileShowcaseCollectible extends Message<ProfileShowcaseCollectible> {
  /**
   * @generated from field: string uid = 1 [deprecated = true];
   * @deprecated
   */
  uid = ''

  /**
   * @generated from field: uint32 order = 2;
   */
  order = 0

  /**
   * @generated from field: string contract_address = 3;
   */
  contractAddress = ''

  /**
   * @generated from field: string community_id = 4 [deprecated = true];
   * @deprecated
   */
  communityId = ''

  /**
   * @generated from field: uint64 chain_id = 5;
   */
  chainId = protoInt64.zero

  /**
   * @generated from field: string token_id = 6;
   */
  tokenId = ''

  /**
   * @generated from field: string account_address = 7 [deprecated = true];
   * @deprecated
   */
  accountAddress = ''

  constructor(data?: PartialMessage<ProfileShowcaseCollectible>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'ProfileShowcaseCollectible'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'uid', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'order', kind: 'scalar', T: 13 /* ScalarType.UINT32 */ },
    {
      no: 3,
      name: 'contract_address',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 4,
      name: 'community_id',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    { no: 5, name: 'chain_id', kind: 'scalar', T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: 'token_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    {
      no: 7,
      name: 'account_address',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ProfileShowcaseCollectible {
    return new ProfileShowcaseCollectible().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseCollectible {
    return new ProfileShowcaseCollectible().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseCollectible {
    return new ProfileShowcaseCollectible().fromJsonString(jsonString, options)
  }

  static equals(
    a:
      | ProfileShowcaseCollectible
      | PlainMessage<ProfileShowcaseCollectible>
      | undefined,
    b:
      | ProfileShowcaseCollectible
      | PlainMessage<ProfileShowcaseCollectible>
      | undefined
  ): boolean {
    return proto3.util.equals(ProfileShowcaseCollectible, a, b)
  }
}

/**
 * @generated from message ProfileShowcaseVerifiedToken
 */
export class ProfileShowcaseVerifiedToken extends Message<ProfileShowcaseVerifiedToken> {
  /**
   * @generated from field: string symbol = 1;
   */
  symbol = ''

  /**
   * @generated from field: uint32 order = 2;
   */
  order = 0

  constructor(data?: PartialMessage<ProfileShowcaseVerifiedToken>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'ProfileShowcaseVerifiedToken'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'symbol', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'order', kind: 'scalar', T: 13 /* ScalarType.UINT32 */ },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ProfileShowcaseVerifiedToken {
    return new ProfileShowcaseVerifiedToken().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseVerifiedToken {
    return new ProfileShowcaseVerifiedToken().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseVerifiedToken {
    return new ProfileShowcaseVerifiedToken().fromJsonString(
      jsonString,
      options
    )
  }

  static equals(
    a:
      | ProfileShowcaseVerifiedToken
      | PlainMessage<ProfileShowcaseVerifiedToken>
      | undefined,
    b:
      | ProfileShowcaseVerifiedToken
      | PlainMessage<ProfileShowcaseVerifiedToken>
      | undefined
  ): boolean {
    return proto3.util.equals(ProfileShowcaseVerifiedToken, a, b)
  }
}

/**
 * @generated from message ProfileShowcaseUnverifiedToken
 */
export class ProfileShowcaseUnverifiedToken extends Message<ProfileShowcaseUnverifiedToken> {
  /**
   * @generated from field: string contract_address = 1;
   */
  contractAddress = ''

  /**
   * @generated from field: uint32 order = 2;
   */
  order = 0

  /**
   * @generated from field: uint64 chain_id = 3;
   */
  chainId = protoInt64.zero

  /**
   * @generated from field: string community_id = 4 [deprecated = true];
   * @deprecated
   */
  communityId = ''

  constructor(data?: PartialMessage<ProfileShowcaseUnverifiedToken>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'ProfileShowcaseUnverifiedToken'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: 'contract_address',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    { no: 2, name: 'order', kind: 'scalar', T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: 'chain_id', kind: 'scalar', T: 4 /* ScalarType.UINT64 */ },
    {
      no: 4,
      name: 'community_id',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ProfileShowcaseUnverifiedToken {
    return new ProfileShowcaseUnverifiedToken().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseUnverifiedToken {
    return new ProfileShowcaseUnverifiedToken().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseUnverifiedToken {
    return new ProfileShowcaseUnverifiedToken().fromJsonString(
      jsonString,
      options
    )
  }

  static equals(
    a:
      | ProfileShowcaseUnverifiedToken
      | PlainMessage<ProfileShowcaseUnverifiedToken>
      | undefined,
    b:
      | ProfileShowcaseUnverifiedToken
      | PlainMessage<ProfileShowcaseUnverifiedToken>
      | undefined
  ): boolean {
    return proto3.util.equals(ProfileShowcaseUnverifiedToken, a, b)
  }
}

/**
 * @generated from message ProfileShowcaseSocialLink
 */
export class ProfileShowcaseSocialLink extends Message<ProfileShowcaseSocialLink> {
  /**
   * @generated from field: string url = 1;
   */
  url = ''

  /**
   * @generated from field: uint32 order = 2;
   */
  order = 0

  /**
   * @generated from field: string text = 3;
   */
  text = ''

  constructor(data?: PartialMessage<ProfileShowcaseSocialLink>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'ProfileShowcaseSocialLink'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'url', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'order', kind: 'scalar', T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: 'text', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ProfileShowcaseSocialLink {
    return new ProfileShowcaseSocialLink().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseSocialLink {
    return new ProfileShowcaseSocialLink().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseSocialLink {
    return new ProfileShowcaseSocialLink().fromJsonString(jsonString, options)
  }

  static equals(
    a:
      | ProfileShowcaseSocialLink
      | PlainMessage<ProfileShowcaseSocialLink>
      | undefined,
    b:
      | ProfileShowcaseSocialLink
      | PlainMessage<ProfileShowcaseSocialLink>
      | undefined
  ): boolean {
    return proto3.util.equals(ProfileShowcaseSocialLink, a, b)
  }
}

/**
 * @generated from message ProfileShowcaseEntries
 */
export class ProfileShowcaseEntries extends Message<ProfileShowcaseEntries> {
  /**
   * @generated from field: repeated ProfileShowcaseCommunity communities = 1;
   */
  communities: ProfileShowcaseCommunity[] = []

  /**
   * @generated from field: repeated ProfileShowcaseAccount accounts = 2;
   */
  accounts: ProfileShowcaseAccount[] = []

  /**
   * @generated from field: repeated ProfileShowcaseCollectible collectibles = 3;
   */
  collectibles: ProfileShowcaseCollectible[] = []

  /**
   * @generated from field: repeated ProfileShowcaseVerifiedToken verified_tokens = 4;
   */
  verifiedTokens: ProfileShowcaseVerifiedToken[] = []

  /**
   * @generated from field: repeated ProfileShowcaseUnverifiedToken unverified_tokens = 5;
   */
  unverifiedTokens: ProfileShowcaseUnverifiedToken[] = []

  /**
   * @generated from field: repeated ProfileShowcaseSocialLink social_links = 6;
   */
  socialLinks: ProfileShowcaseSocialLink[] = []

  constructor(data?: PartialMessage<ProfileShowcaseEntries>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'ProfileShowcaseEntries'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: 'communities',
      kind: 'message',
      T: ProfileShowcaseCommunity,
      repeated: true,
    },
    {
      no: 2,
      name: 'accounts',
      kind: 'message',
      T: ProfileShowcaseAccount,
      repeated: true,
    },
    {
      no: 3,
      name: 'collectibles',
      kind: 'message',
      T: ProfileShowcaseCollectible,
      repeated: true,
    },
    {
      no: 4,
      name: 'verified_tokens',
      kind: 'message',
      T: ProfileShowcaseVerifiedToken,
      repeated: true,
    },
    {
      no: 5,
      name: 'unverified_tokens',
      kind: 'message',
      T: ProfileShowcaseUnverifiedToken,
      repeated: true,
    },
    {
      no: 6,
      name: 'social_links',
      kind: 'message',
      T: ProfileShowcaseSocialLink,
      repeated: true,
    },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ProfileShowcaseEntries {
    return new ProfileShowcaseEntries().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseEntries {
    return new ProfileShowcaseEntries().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseEntries {
    return new ProfileShowcaseEntries().fromJsonString(jsonString, options)
  }

  static equals(
    a:
      | ProfileShowcaseEntries
      | PlainMessage<ProfileShowcaseEntries>
      | undefined,
    b: ProfileShowcaseEntries | PlainMessage<ProfileShowcaseEntries> | undefined
  ): boolean {
    return proto3.util.equals(ProfileShowcaseEntries, a, b)
  }
}

/**
 * @generated from message ProfileShowcaseEntriesEncrypted
 */
export class ProfileShowcaseEntriesEncrypted extends Message<ProfileShowcaseEntriesEncrypted> {
  /**
   * @generated from field: bytes encrypted_entries = 1;
   */
  encryptedEntries = new Uint8Array(0)

  /**
   * @generated from field: repeated bytes encryption_keys = 2;
   */
  encryptionKeys: Uint8Array[] = []

  constructor(data?: PartialMessage<ProfileShowcaseEntriesEncrypted>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'ProfileShowcaseEntriesEncrypted'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: 'encrypted_entries',
      kind: 'scalar',
      T: 12 /* ScalarType.BYTES */,
    },
    {
      no: 2,
      name: 'encryption_keys',
      kind: 'scalar',
      T: 12 /* ScalarType.BYTES */,
      repeated: true,
    },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ProfileShowcaseEntriesEncrypted {
    return new ProfileShowcaseEntriesEncrypted().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseEntriesEncrypted {
    return new ProfileShowcaseEntriesEncrypted().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseEntriesEncrypted {
    return new ProfileShowcaseEntriesEncrypted().fromJsonString(
      jsonString,
      options
    )
  }

  static equals(
    a:
      | ProfileShowcaseEntriesEncrypted
      | PlainMessage<ProfileShowcaseEntriesEncrypted>
      | undefined,
    b:
      | ProfileShowcaseEntriesEncrypted
      | PlainMessage<ProfileShowcaseEntriesEncrypted>
      | undefined
  ): boolean {
    return proto3.util.equals(ProfileShowcaseEntriesEncrypted, a, b)
  }
}

/**
 * @generated from message ProfileShowcase
 */
export class ProfileShowcase extends Message<ProfileShowcase> {
  /**
   * @generated from field: ProfileShowcaseEntries for_everyone = 1;
   */
  forEveryone?: ProfileShowcaseEntries

  /**
   * @generated from field: ProfileShowcaseEntriesEncrypted for_contacts = 2;
   */
  forContacts?: ProfileShowcaseEntriesEncrypted

  /**
   * @generated from field: ProfileShowcaseEntriesEncrypted for_id_verified_contacts = 3;
   */
  forIdVerifiedContacts?: ProfileShowcaseEntriesEncrypted

  constructor(data?: PartialMessage<ProfileShowcase>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'ProfileShowcase'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'for_everyone', kind: 'message', T: ProfileShowcaseEntries },
    {
      no: 2,
      name: 'for_contacts',
      kind: 'message',
      T: ProfileShowcaseEntriesEncrypted,
    },
    {
      no: 3,
      name: 'for_id_verified_contacts',
      kind: 'message',
      T: ProfileShowcaseEntriesEncrypted,
    },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ProfileShowcase {
    return new ProfileShowcase().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcase {
    return new ProfileShowcase().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcase {
    return new ProfileShowcase().fromJsonString(jsonString, options)
  }

  static equals(
    a: ProfileShowcase | PlainMessage<ProfileShowcase> | undefined,
    b: ProfileShowcase | PlainMessage<ProfileShowcase> | undefined
  ): boolean {
    return proto3.util.equals(ProfileShowcase, a, b)
  }
}

/**
 * @generated from message ProfileShowcaseCommunityPreference
 */
export class ProfileShowcaseCommunityPreference extends Message<ProfileShowcaseCommunityPreference> {
  /**
   * @generated from field: string community_id = 1;
   */
  communityId = ''

  /**
   * @generated from field: ProfileShowcaseVisibility showcase_visibility = 2;
   */
  showcaseVisibility = ProfileShowcaseVisibility.NO_ONE

  /**
   * @generated from field: uint32 order = 3;
   */
  order = 0

  constructor(data?: PartialMessage<ProfileShowcaseCommunityPreference>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'ProfileShowcaseCommunityPreference'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: 'community_id',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 2,
      name: 'showcase_visibility',
      kind: 'enum',
      T: proto3.getEnumType(ProfileShowcaseVisibility),
    },
    { no: 3, name: 'order', kind: 'scalar', T: 13 /* ScalarType.UINT32 */ },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ProfileShowcaseCommunityPreference {
    return new ProfileShowcaseCommunityPreference().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseCommunityPreference {
    return new ProfileShowcaseCommunityPreference().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseCommunityPreference {
    return new ProfileShowcaseCommunityPreference().fromJsonString(
      jsonString,
      options
    )
  }

  static equals(
    a:
      | ProfileShowcaseCommunityPreference
      | PlainMessage<ProfileShowcaseCommunityPreference>
      | undefined,
    b:
      | ProfileShowcaseCommunityPreference
      | PlainMessage<ProfileShowcaseCommunityPreference>
      | undefined
  ): boolean {
    return proto3.util.equals(ProfileShowcaseCommunityPreference, a, b)
  }
}

/**
 * @generated from message ProfileShowcaseAccountPreference
 */
export class ProfileShowcaseAccountPreference extends Message<ProfileShowcaseAccountPreference> {
  /**
   * @generated from field: string address = 1;
   */
  address = ''

  /**
   * @generated from field: string name = 2 [deprecated = true];
   * @deprecated
   */
  name = ''

  /**
   * @generated from field: string color_id = 3 [deprecated = true];
   * @deprecated
   */
  colorId = ''

  /**
   * @generated from field: string emoji = 4 [deprecated = true];
   * @deprecated
   */
  emoji = ''

  /**
   * @generated from field: ProfileShowcaseVisibility showcase_visibility = 5;
   */
  showcaseVisibility = ProfileShowcaseVisibility.NO_ONE

  /**
   * @generated from field: uint32 order = 6;
   */
  order = 0

  constructor(data?: PartialMessage<ProfileShowcaseAccountPreference>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'ProfileShowcaseAccountPreference'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'address', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'name', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 3, name: 'color_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 4, name: 'emoji', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    {
      no: 5,
      name: 'showcase_visibility',
      kind: 'enum',
      T: proto3.getEnumType(ProfileShowcaseVisibility),
    },
    { no: 6, name: 'order', kind: 'scalar', T: 13 /* ScalarType.UINT32 */ },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ProfileShowcaseAccountPreference {
    return new ProfileShowcaseAccountPreference().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseAccountPreference {
    return new ProfileShowcaseAccountPreference().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseAccountPreference {
    return new ProfileShowcaseAccountPreference().fromJsonString(
      jsonString,
      options
    )
  }

  static equals(
    a:
      | ProfileShowcaseAccountPreference
      | PlainMessage<ProfileShowcaseAccountPreference>
      | undefined,
    b:
      | ProfileShowcaseAccountPreference
      | PlainMessage<ProfileShowcaseAccountPreference>
      | undefined
  ): boolean {
    return proto3.util.equals(ProfileShowcaseAccountPreference, a, b)
  }
}

/**
 * @generated from message ProfileShowcaseCollectiblePreference
 */
export class ProfileShowcaseCollectiblePreference extends Message<ProfileShowcaseCollectiblePreference> {
  /**
   * @generated from field: string contract_address = 1;
   */
  contractAddress = ''

  /**
   * @generated from field: uint64 chain_id = 2;
   */
  chainId = protoInt64.zero

  /**
   * @generated from field: string token_id = 3;
   */
  tokenId = ''

  /**
   * @generated from field: string community_id = 4 [deprecated = true];
   * @deprecated
   */
  communityId = ''

  /**
   * @generated from field: string account_address = 5 [deprecated = true];
   * @deprecated
   */
  accountAddress = ''

  /**
   * @generated from field: ProfileShowcaseVisibility showcase_visibility = 6;
   */
  showcaseVisibility = ProfileShowcaseVisibility.NO_ONE

  /**
   * @generated from field: uint32 order = 7;
   */
  order = 0

  constructor(data?: PartialMessage<ProfileShowcaseCollectiblePreference>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'ProfileShowcaseCollectiblePreference'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: 'contract_address',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    { no: 2, name: 'chain_id', kind: 'scalar', T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: 'token_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    {
      no: 4,
      name: 'community_id',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 5,
      name: 'account_address',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 6,
      name: 'showcase_visibility',
      kind: 'enum',
      T: proto3.getEnumType(ProfileShowcaseVisibility),
    },
    { no: 7, name: 'order', kind: 'scalar', T: 13 /* ScalarType.UINT32 */ },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ProfileShowcaseCollectiblePreference {
    return new ProfileShowcaseCollectiblePreference().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseCollectiblePreference {
    return new ProfileShowcaseCollectiblePreference().fromJson(
      jsonValue,
      options
    )
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseCollectiblePreference {
    return new ProfileShowcaseCollectiblePreference().fromJsonString(
      jsonString,
      options
    )
  }

  static equals(
    a:
      | ProfileShowcaseCollectiblePreference
      | PlainMessage<ProfileShowcaseCollectiblePreference>
      | undefined,
    b:
      | ProfileShowcaseCollectiblePreference
      | PlainMessage<ProfileShowcaseCollectiblePreference>
      | undefined
  ): boolean {
    return proto3.util.equals(ProfileShowcaseCollectiblePreference, a, b)
  }
}

/**
 * @generated from message ProfileShowcaseVerifiedTokenPreference
 */
export class ProfileShowcaseVerifiedTokenPreference extends Message<ProfileShowcaseVerifiedTokenPreference> {
  /**
   * @generated from field: string symbol = 1;
   */
  symbol = ''

  /**
   * @generated from field: ProfileShowcaseVisibility showcase_visibility = 2;
   */
  showcaseVisibility = ProfileShowcaseVisibility.NO_ONE

  /**
   * @generated from field: uint32 order = 3;
   */
  order = 0

  constructor(data?: PartialMessage<ProfileShowcaseVerifiedTokenPreference>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'ProfileShowcaseVerifiedTokenPreference'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'symbol', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    {
      no: 2,
      name: 'showcase_visibility',
      kind: 'enum',
      T: proto3.getEnumType(ProfileShowcaseVisibility),
    },
    { no: 3, name: 'order', kind: 'scalar', T: 13 /* ScalarType.UINT32 */ },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ProfileShowcaseVerifiedTokenPreference {
    return new ProfileShowcaseVerifiedTokenPreference().fromBinary(
      bytes,
      options
    )
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseVerifiedTokenPreference {
    return new ProfileShowcaseVerifiedTokenPreference().fromJson(
      jsonValue,
      options
    )
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseVerifiedTokenPreference {
    return new ProfileShowcaseVerifiedTokenPreference().fromJsonString(
      jsonString,
      options
    )
  }

  static equals(
    a:
      | ProfileShowcaseVerifiedTokenPreference
      | PlainMessage<ProfileShowcaseVerifiedTokenPreference>
      | undefined,
    b:
      | ProfileShowcaseVerifiedTokenPreference
      | PlainMessage<ProfileShowcaseVerifiedTokenPreference>
      | undefined
  ): boolean {
    return proto3.util.equals(ProfileShowcaseVerifiedTokenPreference, a, b)
  }
}

/**
 * @generated from message ProfileShowcaseUnverifiedTokenPreference
 */
export class ProfileShowcaseUnverifiedTokenPreference extends Message<ProfileShowcaseUnverifiedTokenPreference> {
  /**
   * @generated from field: string contract_address = 1;
   */
  contractAddress = ''

  /**
   * @generated from field: uint64 chain_id = 2;
   */
  chainId = protoInt64.zero

  /**
   * @generated from field: string community_id = 3 [deprecated = true];
   * @deprecated
   */
  communityId = ''

  /**
   * @generated from field: ProfileShowcaseVisibility showcase_visibility = 4;
   */
  showcaseVisibility = ProfileShowcaseVisibility.NO_ONE

  /**
   * @generated from field: uint32 order = 5;
   */
  order = 0

  constructor(data?: PartialMessage<ProfileShowcaseUnverifiedTokenPreference>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'ProfileShowcaseUnverifiedTokenPreference'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: 'contract_address',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    { no: 2, name: 'chain_id', kind: 'scalar', T: 4 /* ScalarType.UINT64 */ },
    {
      no: 3,
      name: 'community_id',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 4,
      name: 'showcase_visibility',
      kind: 'enum',
      T: proto3.getEnumType(ProfileShowcaseVisibility),
    },
    { no: 5, name: 'order', kind: 'scalar', T: 13 /* ScalarType.UINT32 */ },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ProfileShowcaseUnverifiedTokenPreference {
    return new ProfileShowcaseUnverifiedTokenPreference().fromBinary(
      bytes,
      options
    )
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseUnverifiedTokenPreference {
    return new ProfileShowcaseUnverifiedTokenPreference().fromJson(
      jsonValue,
      options
    )
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseUnverifiedTokenPreference {
    return new ProfileShowcaseUnverifiedTokenPreference().fromJsonString(
      jsonString,
      options
    )
  }

  static equals(
    a:
      | ProfileShowcaseUnverifiedTokenPreference
      | PlainMessage<ProfileShowcaseUnverifiedTokenPreference>
      | undefined,
    b:
      | ProfileShowcaseUnverifiedTokenPreference
      | PlainMessage<ProfileShowcaseUnverifiedTokenPreference>
      | undefined
  ): boolean {
    return proto3.util.equals(ProfileShowcaseUnverifiedTokenPreference, a, b)
  }
}

/**
 * @generated from message ProfileShowcaseSocialLinkPreference
 */
export class ProfileShowcaseSocialLinkPreference extends Message<ProfileShowcaseSocialLinkPreference> {
  /**
   * @generated from field: string url = 1;
   */
  url = ''

  /**
   * @generated from field: string text = 2;
   */
  text = ''

  /**
   * @generated from field: uint32 order = 3;
   */
  order = 0

  /**
   * @generated from field: ProfileShowcaseVisibility showcase_visibility = 4;
   */
  showcaseVisibility = ProfileShowcaseVisibility.NO_ONE

  constructor(data?: PartialMessage<ProfileShowcaseSocialLinkPreference>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'ProfileShowcaseSocialLinkPreference'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'url', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'text', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 3, name: 'order', kind: 'scalar', T: 13 /* ScalarType.UINT32 */ },
    {
      no: 4,
      name: 'showcase_visibility',
      kind: 'enum',
      T: proto3.getEnumType(ProfileShowcaseVisibility),
    },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): ProfileShowcaseSocialLinkPreference {
    return new ProfileShowcaseSocialLinkPreference().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseSocialLinkPreference {
    return new ProfileShowcaseSocialLinkPreference().fromJson(
      jsonValue,
      options
    )
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ProfileShowcaseSocialLinkPreference {
    return new ProfileShowcaseSocialLinkPreference().fromJsonString(
      jsonString,
      options
    )
  }

  static equals(
    a:
      | ProfileShowcaseSocialLinkPreference
      | PlainMessage<ProfileShowcaseSocialLinkPreference>
      | undefined,
    b:
      | ProfileShowcaseSocialLinkPreference
      | PlainMessage<ProfileShowcaseSocialLinkPreference>
      | undefined
  ): boolean {
    return proto3.util.equals(ProfileShowcaseSocialLinkPreference, a, b)
  }
}

/**
 * @generated from message SyncProfileShowcasePreferences
 */
export class SyncProfileShowcasePreferences extends Message<SyncProfileShowcasePreferences> {
  /**
   * @generated from field: uint64 clock = 1;
   */
  clock = protoInt64.zero

  /**
   * @generated from field: repeated ProfileShowcaseCommunityPreference communities = 2;
   */
  communities: ProfileShowcaseCommunityPreference[] = []

  /**
   * @generated from field: repeated ProfileShowcaseAccountPreference accounts = 3;
   */
  accounts: ProfileShowcaseAccountPreference[] = []

  /**
   * @generated from field: repeated ProfileShowcaseCollectiblePreference collectibles = 4;
   */
  collectibles: ProfileShowcaseCollectiblePreference[] = []

  /**
   * @generated from field: repeated ProfileShowcaseVerifiedTokenPreference verified_tokens = 5;
   */
  verifiedTokens: ProfileShowcaseVerifiedTokenPreference[] = []

  /**
   * @generated from field: repeated ProfileShowcaseUnverifiedTokenPreference unverified_tokens = 6;
   */
  unverifiedTokens: ProfileShowcaseUnverifiedTokenPreference[] = []

  /**
   * @generated from field: repeated ProfileShowcaseSocialLinkPreference social_links = 7;
   */
  socialLinks: ProfileShowcaseSocialLinkPreference[] = []

  constructor(data?: PartialMessage<SyncProfileShowcasePreferences>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'SyncProfileShowcasePreferences'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'clock', kind: 'scalar', T: 4 /* ScalarType.UINT64 */ },
    {
      no: 2,
      name: 'communities',
      kind: 'message',
      T: ProfileShowcaseCommunityPreference,
      repeated: true,
    },
    {
      no: 3,
      name: 'accounts',
      kind: 'message',
      T: ProfileShowcaseAccountPreference,
      repeated: true,
    },
    {
      no: 4,
      name: 'collectibles',
      kind: 'message',
      T: ProfileShowcaseCollectiblePreference,
      repeated: true,
    },
    {
      no: 5,
      name: 'verified_tokens',
      kind: 'message',
      T: ProfileShowcaseVerifiedTokenPreference,
      repeated: true,
    },
    {
      no: 6,
      name: 'unverified_tokens',
      kind: 'message',
      T: ProfileShowcaseUnverifiedTokenPreference,
      repeated: true,
    },
    {
      no: 7,
      name: 'social_links',
      kind: 'message',
      T: ProfileShowcaseSocialLinkPreference,
      repeated: true,
    },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): SyncProfileShowcasePreferences {
    return new SyncProfileShowcasePreferences().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): SyncProfileShowcasePreferences {
    return new SyncProfileShowcasePreferences().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): SyncProfileShowcasePreferences {
    return new SyncProfileShowcasePreferences().fromJsonString(
      jsonString,
      options
    )
  }

  static equals(
    a:
      | SyncProfileShowcasePreferences
      | PlainMessage<SyncProfileShowcasePreferences>
      | undefined,
    b:
      | SyncProfileShowcasePreferences
      | PlainMessage<SyncProfileShowcasePreferences>
      | undefined
  ): boolean {
    return proto3.util.equals(SyncProfileShowcasePreferences, a, b)
  }
}
